#+TITLE: System Configuration
#+DESCRIPTION: This file contains some system configurations and checks to make
#+DESCRIPTION: sure all tools are installed correctly. I started playing around
#+DESCRIPTION: with the idea of having something like this on my main system.
#+DESCRIPTION: Org-mode and literate programming seems to be great for this type
#+DESCRIPTION: of task and fun to mess around.
#+DESCRIPTION: Some folks even have the full system conf running from their
#+DESCRIPTION: org-mode file, maybe it will come to that someday, we'll see.
#+AUTHOR: Jose Placido
#+EMAIL: jose.placido@vwds.pt

#+PROPERTY: header-args:shell+ :eval no-export :exports both :results verbatim

* Sanity checks

Check if the main apps are installed, this script will check some cli tools and
mac apps are installed on the system.

#+begin_src shell :noweb yes
  <<bash_helper_functions>>

  echo "Last checked: $(date)"

  is_installed brew
  is_installed git
  is_installed vim
  is_installed emacs
  is_installed bash
  is_app_installed iterm
  is_app_installed homerow
  is_app_installed hyperkey
  is_app_installed keepassxc
  is_app_installed slack
  is_app_installed 'google chrome'
  is_app_installed 'intellij idea'
  is_app_installed tunnelblick
  is_app_installed nagstamon
  is_installed kubectl
  is_installed docker
  is_installed jq
  is_installed yq          # same as jq but for yaml files
  is_installed yamllint
  is_installed helm
  is_installed go
  is_installed python3
  is_app_installed docker
  is_installed ksd         # a tool to decode k8s secrets
  is_installed kubeseal    # a tool to seal k8s secrets
  is_installed minikube
  is_installed ssh
  is_installed openssl     # used in some scripts
  is_installed fzf
  is_installed kubectx     # cluster configuration switcher
  is_installed kubens      # cluster namespace switcher
  is_installed rg          # ripgrep

  echo "Finished."
#+end_src

#+RESULTS:
: Last checked: Wed Sep  3 11:26:02 WEST 2025
: Finished.

Check also if we have the correct envs set

#+begin_src shell
  echo "Last checked: $(date)"
  echo "${SHELL}" | grep 'zsh$' 2>&1 >/dev/null || \
    echo "Wrong \$SHELL, expecting zsh but got ${SHELL}"
  echo "Finished."
#+end_src

#+RESULTS:
: Last checked: Wed Sep  3 11:26:34 WEST 2025
: Finished.


* Utilities and notes

#+begin_comment
  * To lint the document in org-mode: M-x org-lint
  * When you change a property that affects the whole document you have to
    re-evaluate it: C-c C-c
#+end_comment

#+begin_src elisp :exports none :results none
  ;; * To check the 80 column limit use this built-in mode.
  ;;   it may interfere with some other modes/plugins but for now it works.
  ;; There's also a global mode that applies to all other modes but it's not
  ;; recomended.
  ( display-fill-column-indicator-mode )
#+end_src

#+name: bash_helper_functions
#+begin_src shell :results silent :exports none
  is_installed() {
      PROGRAM="${1}"
      which -a "${PROGRAM}" 2>&1 1>/dev/null
      ERROR_CODE="$?"
      if [ "$ERROR_CODE" -ne 0 ]; then
          echo "Tool is missing: $PROGRAM"
      fi
  }

  is_app_installed(){
      PROGRAM="${1}"
      mdfind "kMDItemKind == 'Application'" | grep -i "${PROGRAM}" \
                                                   2>&1 1>/dev/null
      ERROR_CODE="$?"
      if [ "$ERROR_CODE" -ne 0 ]; then
          echo "App is missing: $PROGRAM"
      fi
  }
#+end_src
